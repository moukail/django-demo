- name: Add /var/www/django_demo to Git safe.directory
  community.general.git_config:
    name: safe.directory
    value: /var/www/django_demo
    scope: global
    state: present

- name: Clone Django app
  ansible.builtin.git:
    repo: "{{ repo_url }}"
    dest: "/var/www/{{ project_name }}"
    version: main
    force: yes

- name: Give insecure permissions to an existing file
  ansible.builtin.file:
    path: "/var/www/{{ project_name }}"
    owner: nginx
    group: nginx
    state: directory
    mode: '0755'

- name: Set up virtualenv
  command: python3 -m venv .venv
  args:
    chdir: "/var/www/{{ project_name }}"

- name: Install requirements
  ansible.builtin.pip:
    requirements: "/var/www/{{ project_name }}/requirements.txt"
    virtualenv: "/var/www/{{ project_name }}/.venv"
    virtualenv_python: python3

- name: Set environment variables
  copy:
    dest: "/var/www/{{ project_name }}/.env"
    content: |
      SECRET_KEY={{ django_secret_key }}
      DEBUG=False
      DB_NAME={{ postgres_db }}
      DB_USER={{ postgres_user }}
      DB_PASSWORD={{ postgres_password }}
      DB_HOST={{ postgres_host }}
      DATABASE_URL=postgres://{{ postgres_user }}:{{ postgres_password }}@localhost:5432/{{ postgres_db }}

- name: Migrate DB
  become_user: postgres
  community.general.django_manage:
    command: migrate
    app_path: "/var/www/{{ project_name }}"
    virtualenv: "/var/www/{{ project_name }}/.venv"

- name: Load the initial_data fixture into the application
  become_user: postgres
  community.general.django_manage:
    command: seed_users
    project_path: "/var/www/{{ project_name }}"
    virtualenv: "/var/www/{{ project_name }}/.venv"

- name: Collect static files
  community.general.django_manage:
    command: collectstatic --noinput
    project_path: "/var/www/{{ project_name }}"
    virtualenv: "/var/www/{{ project_name }}/.venv"
