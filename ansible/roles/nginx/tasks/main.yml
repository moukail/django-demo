---
- include_tasks: redhat.yml
  when: ansible_os_family == 'RedHat'
- include_tasks: debian.yml
  when: ansible_os_family == 'Debian'

- name: Downloading NGINX sources
  get_url:
    url: "{{ nginx_tarball_url }}"
    dest: "/tmp/nginx-{{ nginx_ver }}.tar.gz"
  register: nginx_source

- name: Unpacking NGINX
  unarchive:
    copy: no
    dest: /tmp/
    src: "{{ nginx_source.dest }}"
  when: nginx_source.changed
  register: nginx_source_unpack

- name: Configuring NGINX source with custom modules
  command: "./configure --prefix=/usr --conf-path=/etc/nginx/nginx.conf --modules-path=/etc/nginx/modules --error-log-path=/var/log/nginx/error.log \
                --pid-path=/var/run/nginx.pid --user=nginx --group=nginx --build=nginx20 --builddir=/usr/local \
                --with-pcre --with-threads --with-file-aio --with-http_ssl_module --with-http_v2_module"
  args:
    chdir: "{{ nginx_source_unpack.dest }}/nginx-{{ nginx_ver }}"
  when: nginx_source_unpack.changed
  register: nginx_configure

- name: Installing NGINX
  shell: make -j$(nproc) && make install
  args:
    chdir: "{{ nginx_source_unpack.dest }}/nginx-{{ nginx_ver }}"
  when: nginx_configure.changed

- name: Ensure group "nginx" exists
  group:
    name: nginx
    system: yes
    state: present

- name: Add the user 'nginx'
  user:
    name: nginx
    create_home: no
    system: yes
    state: present
    group: nginx

- name: Creating NGINX conf file
  template:
    src: nginx.conf
    dest: "/etc/nginx/nginx.conf"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Create a directory if it does not exist
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /etc/nginx/conf.d
    - /etc/letsencrypt
    - /var/www/default

- name: Creating options-ssl-nginx conf file
  template:
    src: options-ssl-nginx.conf
    dest: /etc/letsencrypt/options-ssl-nginx.conf

- name: Generate DH Parameters with a different size (2048 bits)
  openssl_dhparam:
    path: /etc/letsencrypt/ssl-dhparams.pem
    size: 2048

- name: Creating default conf file
  template:
    src: default.conf
    dest: /etc/nginx/conf.d/default.conf
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Installing NGINX init script (service)
  notify: Restart Nginx
  template:
    src: nginx.service
    dest: /usr/lib/systemd/system/nginx.service
    owner: root
    group: root
    mode: 0755